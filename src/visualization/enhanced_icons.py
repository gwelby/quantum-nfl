"""
Enhanced NFL Quantum Icons System
Comprehensive icon set for quantum football visualization
"""

class NFLEnhancedIcons:
    """Extended NFL-specific quantum icons and symbols"""
    
    # Quantum Field Icons
    QUANTUM_FIELD = {
        'entangled': 'üåå',     # Quantum entanglement field
        'superposed': 'üéÜ',    # Quantum superposition field
        'coherent': '‚ú®',      # Quantum coherence field
        'resonating': 'üí´',    # Quantum resonance field
        'evolving': 'üåÄ',      # Quantum evolution field
        'harmonized': 'üéµ',    # Field harmony
        'synchronized': '‚ö°',   # Field synchronization
        'amplified': 'üîÜ',     # Field amplification
        'protected': 'üõ°Ô∏è',     # Field protection
        'optimized': 'üéØ'      # Field optimization
    }
    
    # Player Development Icons
    DEVELOPMENT = {
        'leveling': 'üìà',      # Level increase
        'mastering': 'üèÜ',     # Mastery achieved
        'learning': 'üìö',      # Learning process
        'practicing': 'üéØ',    # Practice mode
        'analyzing': 'üîç',     # Analysis mode
        'innovating': 'üí°',    # Innovation
        'adapting': 'üîÑ',      # Adaptation
        'evolving': 'ü¶ã',      # Evolution
        'transforming': '‚ö°',   # Transformation
        'perfecting': 'üíé'     # Perfection
    }
    
    # Team Synergy Icons
    SYNERGY = {
        'unified': 'ü§ù',       # Team unity
        'coordinated': '‚öôÔ∏è',   # Coordination
        'harmonious': 'üé≠',    # Harmony
        'synchronized': '‚ö°',   # Synchronization
        'resonating': 'üéµ',    # Resonance
        'collaborating': 'üë•', # Collaboration
        'supporting': 'üõ°Ô∏è',    # Support
        'protecting': 'üè∞',    # Protection
        'attacking': '‚öîÔ∏è',     # Attack
        'defending': 'üõ°Ô∏è'      # Defense
    }
    
    # Mental State Icons
    MENTAL_STATE = {
        'focused': 'üéØ',       # Deep focus
        'alert': 'üëÅÔ∏è',         # High alert
        'calm': 'üåä',          # Calmness
        'energized': '‚ö°',     # Energized
        'confident': 'üí™',     # Confidence
        'determined': 'ü¶Å',    # Determination
        'strategic': '‚ôüÔ∏è',     # Strategic thinking
        'creative': 'üé®',      # Creativity
        'intuitive': 'üîÆ',     # Intuition
        'mindful': 'üßò'        # Mindfulness
    }
    
    # Game Momentum Icons
    MOMENTUM = {
        'surging': 'üåä',       # Strong momentum
        'building': 'üìà',      # Building momentum
        'steady': '‚û°Ô∏è',        # Steady momentum
        'shifting': '‚ÜîÔ∏è',      # Shifting momentum
        'reversing': '‚Ü©Ô∏è',     # Momentum reversal
        'explosive': 'üí•',     # Explosive momentum
        'dominating': 'üëë',    # Dominating momentum
        'recovering': 'üîÑ',    # Recovering momentum
        'accelerating': 'üöÄ',  # Accelerating momentum
        'peaking': '‚≠ê'        # Peak momentum
    }
    
    # Field Conditions Icons
    FIELD_CONDITIONS = {
        'perfect': '‚ú®',       # Perfect conditions
        'good': 'üëç',         # Good conditions
        'challenging': 'üí™',   # Challenging conditions
        'wet': 'üíß',          # Wet field
        'dry': '‚òÄÔ∏è',          # Dry field
        'windy': 'üí®',        # Windy conditions
        'cold': '‚ùÑÔ∏è',         # Cold weather
        'hot': 'üî•',          # Hot weather
        'indoor': 'üèüÔ∏è',       # Indoor stadium
        'outdoor': 'üå≥'       # Outdoor stadium
    }
    
    # Fan Energy Icons
    FAN_ENERGY = {
        'electric': '‚ö°',      # Electric atmosphere
        'loud': 'üì¢',         # Loud crowd
        'cheering': 'üéâ',     # Cheering fans
        'excited': 'üî•',      # Excited fans
        'tense': 'üò∞',        # Tense atmosphere
        'celebrating': 'üéä',   # Celebration
        'supporting': 'üì£',    # Support
        'anticipating': 'ü§î',  # Anticipation
        'unified': 'ü§ù',      # Unity
        'passionate': '‚ù§Ô∏è'     # Passion
    }
    
    # Team Spirit Icons
    TEAM_SPIRIT = {
        'legendary': 'üåü',     # Legendary status
        'elite': 'üëë',        # Elite status
        'rising': 'üöÄ',       # Rising team
        'determined': 'üí™',    # Determined
        'united': 'ü§ù',       # United
        'focused': 'üéØ',      # Focused
        'inspired': 'üí´',     # Inspired
        'dominant': 'ü¶Å',     # Dominant
        'resilient': 'üõ°Ô∏è',    # Resilient
        'innovative': 'üí°'     # Innovative
    }
    
    # Packers Special Icons
    PACKERS = {
        'cheese': 'üßÄ',       # Cheese power
        'crown': 'üëë',        # Championship
        'tradition': 'üèÜ',    # Tradition
        'frozen': '‚ùÑÔ∏è',       # Frozen tundra
        'legendary': 'üåü',    # Legendary status
        'titletown': 'üè∞',    # Titletown
        'victory': '‚úåÔ∏è',      # Victory
        'heritage': 'üìú',     # Heritage
        'power': 'üí™',        # Power
        'glory': '‚ú®'         # Glory
    }
    
    @classmethod
    def get_icon(cls, category: str, state: str) -> str:
        """Get icon from any category"""
        categories = {
            'quantum': cls.QUANTUM_FIELD,
            'development': cls.DEVELOPMENT,
            'synergy': cls.SYNERGY,
            'mental': cls.MENTAL_STATE,
            'momentum': cls.MOMENTUM,
            'field': cls.FIELD_CONDITIONS,
            'fans': cls.FAN_ENERGY,
            'spirit': cls.TEAM_SPIRIT,
            'packers': cls.PACKERS
        }
        return categories.get(category, {}).get(state, '‚ùì')
